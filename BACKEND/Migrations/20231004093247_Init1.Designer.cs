// <auto-generated />
using System;
using BACKEND.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BACKEND.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231004093247_Init1")]
    partial class Init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BACKEND.DATA.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer 1"
                        });
                });

            modelBuilder.Entity("BACKEND.DATA.Models.MasterTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MasterTransactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Setor Tunai"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beli Pulsa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bayar Listrik"
                        });
                });

            modelBuilder.Entity("BACKEND.DATA.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("DebitCreditStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MasterTransactionId")
                        .HasColumnType("int");

                    b.Property<long?>("Point")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bigint")
                        .HasComputedColumnSql("CASE\r\n                        WHEN MasterTransactionId = 2 AND Amount >= 10001 AND Amount <= 30000 THEN FLOOR(Amount / 1000)\r\n                        WHEN MasterTransactionId = 2 AND Amount > 30000 THEN FLOOR(Amount / 1000) * 2\r\n                        WHEN MasterTransactionId = 3 AND Amount >= 50001 AND Amount <= 100000 THEN FLOOR(Amount / 2000)\r\n                        WHEN MasterTransactionId = 3 AND Amount > 100000 THEN FLOOR(Amount / 2000) * 2\r\n                        ELSE 0\r\n                    END");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("MasterTransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BACKEND.DATA.Models.Transaction", b =>
                {
                    b.HasOne("BACKEND.DATA.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId");

                    b.HasOne("BACKEND.DATA.Models.MasterTransaction", "MasterTransaction")
                        .WithMany("Transactions")
                        .HasForeignKey("MasterTransactionId");

                    b.Navigation("Account");

                    b.Navigation("MasterTransaction");
                });

            modelBuilder.Entity("BACKEND.DATA.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BACKEND.DATA.Models.MasterTransaction", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
